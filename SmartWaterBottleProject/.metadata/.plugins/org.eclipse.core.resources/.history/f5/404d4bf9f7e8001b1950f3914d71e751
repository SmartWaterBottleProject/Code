//Smart Water Bottle Project: Servomotor Demo
//Programmer: Ryan Koons
//UCF SD1
//7-19-21

//Task: Generate PWM output signal in order to re-position the servomotor.
// For 90 degree angle: ON pulse: 1500 microseconds
//For 100 degree angle: ON pulse: 1560 microseconds
    //Increment PWM duty cycle in 10 microsecond intervals
        //Use left button to decrease 10 microseconds
        //Use right button to increase 10 microseconds

#include <msp430.h>
#include "driverlib.h"
#define Button1 BIT1     //P1.1
#define Button2 BIT2     //P1.2

int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    PM5CTL0 &= ~LOCKLPM5;       //clear lock and allow new code re-flash/enable GPIO Pins

    // Configure P1.4 as TA1.0 for PWM
    //P1DIR.4=1, PSEL1.4=1, P1SEL0.4=1, LCDSz=0
    P1DIR |= BIT4; //SetP1DIR bit 4 as high
    P1SEL1 |= BIT4; //SetP1SEL1 bit 4 as high
    P1SEL0 |= BIT4; //Set P1SEL0 bit 4 as high
    LCDS1 = 0;  //Set output LED segment to 0


    //configuring buttons
    P1DIR &= ~(SanitizeButton|WaterQualityButton); //0: input
    P1REN |= (SanitizeButton|WaterQualityButton);  //1: enable built in resistors
    P1OUT |= (SanitizeButton|WaterQualityButton);  //1: Pull up to Vcc
    P1IE |= (SanitizeButton|WaterQualityButton);   //1:enable interrupts
    P1IES |= (SanitizeButton|WaterQualityButton);  //1: interrupt on falling edge
    P1IFG &= ~(SanitizeButton|WaterQualityButton); //0: Clear interrupt flags

    _enable_interrupts(); //Set global interrupt enable bit



    return 0;
}

//**********ISR********//
//*********************//
#pragma vector = PORT1_VECTOR  //Link the ISR to the Vector
__interrupt void P1_ISR()
{
   if( (P1IFG&SanitizeButton) !=0 ) {
       //decrement 10 microseconds
   P1IFG &= ~SanitizeButton; //clear flag (shared)
   }

   if( (P1IFG&WaterQualityButton)!= 0 ) {
       //increment 10 microseconds
   P1IFG &= ~WaterQualityButton; //clear flag (shared)
   }

}
